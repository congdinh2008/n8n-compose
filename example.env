# =======================
# DOMAIN CONFIGURATION
# =======================
# DOMAIN_NAME and SUBDOMAIN together determine where n8n will be reachable from
# The top level domain to serve from
DOMAIN_NAME=example.com

# The subdomain to serve from
SUBDOMAIN=n8n

# Optional timezone for Cron and scheduling nodes
GENERIC_TIMEZONE=Asia/Ho_Chi_Minh

# =======================
# DATABASE CONFIGURATION
# =======================
# PostgreSQL database credentials
POSTGRES_USER=n8n
POSTGRES_PASSWORD=change_me_please  # IMPORTANT: Change this in production!
POSTGRES_DB=n8n

# =======================
# N8N CONFIGURATION
# =======================
# Protocol to use (http or https)
N8N_PROTOCOL=https

# Port mapping for n8n service (format: [host_ip:]host_port:container_port)
# Use 127.0.0.1:5678:5678 for local-only access (recommended with reverse proxy)
# Use 5678:5678 for direct external access (not recommended for production)
N8N_PORT_MAPPING=127.0.0.1:5678:5678

# Security settings - HIGHLY RECOMMENDED for production
# Generate a strong random string for N8N_ENCRYPTION_KEY
N8N_ENCRYPTION_KEY=your-random-encryption-key

# Basic authentication (optional but recommended)
N8N_BASIC_AUTH_ACTIVE=false
N8N_BASIC_AUTH_USER=admin
N8N_BASIC_AUTH_PASSWORD=change_me_please

# Whether to allow direct access to n8n port 5678 from outside
N8N_DIRECT_ACCESS=false

# =======================
# SSL CONFIGURATION
# =======================
# The email address to use for TLS/SSL certificate creation
SSL_EMAIL=your-email@example.com

# =======================
# AWS CONFIGURATION
# =======================
# The name of the SSH key pair to use for the EC2 instance
KEY_NAME=n8n-key-pair

# Whether to allocate and associate an Elastic IP (static IP address) to the EC2 instance
# Set to "true" to enable (recommended for production), "false" to use the default dynamic IP
ENABLE_ELASTIC_IP=false

# Whether to enable automatic weekly backups of n8n
# Set to "true" to enable backups, "false" to disable
ENABLE_AUTO_BACKUP=false

# AWS region for resources
AWS_REGION=ap-southeast-1

# AMI ID for EC2 instance
AMI_ID=ami-0df7a207adb9748c7

# Instance type for EC2 instance
INSTANCE_TYPE=t2.micro

# Availability zone for the subnet
AVAILABILITY_ZONE=ap-southeast-1a

# Root volume size in GB
ROOT_VOLUME_SIZE=30

# Root volume type
ROOT_VOLUME_TYPE=gp2

# CIDR block for VPC
VPC_CIDR=10.0.0.0/16

# CIDR block for subnet
SUBNET_CIDR=10.0.1.0/24

# CIDR blocks that are allowed to connect via SSH
SSH_CIDR_BLOCKS=0.0.0.0/0

# Enable detailed CloudWatch monitoring for the instance
ENABLE_DETAILED_MONITORING=false

# Protect the instance from accidental termination
ENABLE_TERMINATION_PROTECTION=false

# Whether to delete the EBS volume when the instance is terminated
DELETE_VOLUME_ON_TERMINATION=true

# Whether to create an IAM role for the EC2 instance
CREATE_IAM_ROLE=false

# Name of an existing instance profile to use (if CREATE_IAM_ROLE is false)
INSTANCE_PROFILE_NAME=""

# Whether to create CloudWatch alarms for the instance
CREATE_ALARMS=false

# List of ARNs to trigger when the alarm transitions to ALARM state (comma-separated)
ALARM_ACTIONS=""

# Whether to enable AWS Backup for the instance
ENABLE_BACKUPS=false

# IAM role ARN to use for AWS Backup
BACKUP_ROLE_ARN=""

# AWS Backup plan ID to use
BACKUP_PLAN_ID=""

# Common tags to apply to all resources (JSON format)
COMMON_TAGS='{"Project":"n8n","Environment":"production","Terraform":"true"}'

# Docker Compose project name
COMPOSE_PROJECT_NAME=n8n